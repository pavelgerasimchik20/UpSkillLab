package strings.patternMatcher;

import java.util.Arrays;
import java.util.InputMismatchException;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Task1 { //  Cоздать приложение, разбирающее текст (текст хранится в строке) и позволяющее выполнять с текстом три различных операции:
    // отсортировать абзацы по количеству предложений;
    // в каждом предложении отсортировать слова по длине;
    // отсортировать лексемы в предложении по убыванию количества вхождений заданного символа, а в случае равенства – по алфавиту.
    public static void main(String[] args) {

        System.out.println("Введите номер действия:\n1. Отсортировать абзацы по количеству предложений\n2. Отсортировать слова по длине в предложениях\n3. Отсортировать лексемы по убыванию количества заданного символа\n-->");
        Scanner scanner = new Scanner(System.in);  // Оригинал текста https://онлайн-читать.рф/толстой-война-и-мир/26
        String text = " В октябре 1805 года русские войска занимали села и города эрцгерцогства Австрийского, и еще новые полки приходили из России, и, отягощая постоем жителей, располагались у крепости Браунау. В Браунау была главная квартира главнокомандующего Кутузова.\n" +
                " 11-го октября 1805 года один из только что пришедших к Браунау пехотных полков, ожидая смотра главнокомандующего, стоял в полумиле от города. Несмотря на нерусскую местность и обстановку: фруктовые сады, каменные ограды, черепичные крыши, горы, видневшиеся вдали, — на нерусский народ, с любопытством смотревший на солдат, — полк имел точно такой же вид, какой имел всякий русский полк, готовившийся к смотру где-нибудь в середине России.\n" +
                " С вечера, на последнем переходе, был получен приказ, что главнокомандующий будет смотреть полк на походе. Хотя слова приказа и показались неясны полковому командиру и возник вопрос, как разуметь слова приказа: в походной форме или нет? — в совете батальонных командиров было решено представить полк в парадной форме на том основании, что всегда лучше перекланяться, чем недокланяться. И солдаты, после тридцативерстного перехода, не смыкали глаз, всю ночь чинились, чистились: адъютанты и ротные рассчитывали, отчисляли; и к утру полк, вместо растянутой беспорядочной толпы, какою он был накануне на последнем переходе, представлял стройную массу двух тысяч людей, из которых каждый знал свое место, свое дело, из которых на каждом каждая пуговка и ремешок были на своем месте и блестели чистотой. Не только наружное было исправно, но ежели бы угодно было главнокомандующему заглянуть под мундиры, то на каждом он увидел бы одинаково чистую рубаху и в каждом ранце нашел бы узаконенное число вещей, «шильце и мыльце», как говорят солдаты. Было только одно обстоятельство, насчет которого никто не мог быть спокоен. Это была обувь. Больше чем у половины людей сапоги были разбиты. Но недостаток этот происходил не от вины полкового командира, так как, несмотря на неоднократные требования, ему не был отпущен товар от австрийского ведомства, а полк прошел тысячу верст.\n" +
                " Полковой командир был пожилой, сангвинический, с седеющими бровями и бакенбардами генерал, плотный и широкий больше от груди к спине, чем от одного плеча к другому. На нем был новый, с иголочки, со слежавшимися складками, мундир и густые золотые эполеты, которые как будто не книзу, а кверху поднимали его тучные плечи. Полковой командир имел вид человека, счастливо совершающего одно из самых торжественных дел жизни. Он похаживал перед фронтом и, похаживая, подрагивал на каждом шагу, слегка изгибаясь спиною. Видно было, что полковой командир любуется своим полком, счастлив им и что все его силы душевные заняты только полком; но несмотря на то, его подрагивающая походка как будто говорила, что, кроме военных интересов, в душе его немалое место занимают и интересы общественного быта и женский пол.\n";
        try {
            int key = scanner.nextInt();
            switch (key) {
                case (1):
                    paragraphSort(text);
                    break;
                case (2):
                    wordSort(text);
                    break;
                case (3):
                    leksemaSort(text);
                    break;
                default:
                    System.out.println("Выберите корректный вариант");
                    break;
            }
        } catch (InputMismatchException inputMismatchException) {
            System.out.println("Выберите корректный вариант");
        }
    }

    private static void leksemaSort(String text) {
    }

    private static void wordSort(String text) {
    }

    private static void paragraphSort(String text) {
        int i =0;
        int countPar = countParagraph(text); // "^ .+\n$"
        String[] array = new String[countPar];
        Pattern pattern = Pattern.compile("^ .+\\n$");
        Matcher matcher = pattern.matcher(text);
        while(matcher.find()){
            array[i]= matcher.group();
            System.out.println(array[i]);
            i++;
        }
        System.out.println(Arrays.toString(array));
    }

    private static int countParagraph(String text) {
        int result = 0;
        char[] arr = text.toCharArray();
        for (char ch : arr ) {
            if(ch=='\n'){
                result ++;
            }
        }return result;
    }

}
